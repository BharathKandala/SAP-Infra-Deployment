---

# SLES Clustering - Deploy ASCS/ERS SAP clustering Resources
# Ref: https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/high-availability-guide-rhel-netapp-files
# - name:                                "SCSERS - Enqueue Server Setup"
#   block:
#     - name:                            "SCSERS - Get the variable to determine ENSA version"
#       become_user:                     "{{ sap_sid | lower }}adm"
#       ansible.builtin.shell:           "{{ sapcontrolscs_command }} -host {{ scs_virtual_hostname }} -function GetProcessList"
#       environment:
#         PATH:                          /usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/usr/sap/{{ sap_sid | upper }}/SYS/exe/uc/linuxx86_64:/usr/sap/{{ sap_sid | upper }}/SYS/exe/run:/home/{{ sap_sid | lower }}adm
#         DIR_LIBRARY:                   /usr/sap/{{ sap_sid | upper }}/SYS/exe/run
#         LD_LIBRARY_PATH:               /usr/sap/{{ sap_sid | upper }}/SYS/exe/run:/usr/sap/{ sap_sid | upper }}/SYS/exe/uc/linuxx86_64
#         SAPSYSTEMNAME:                 "{{ sap_sid | upper }}"
#       register:                        enq_server
#       failed_when:                     enq_server.rc > 3
#       changed_when:                    false

#     # enserver, EnqueueServer
#     - name:                            "SCSERS - Is ENSA1"
#       ansible.builtin.set_fact:
#         ensa1:                         "{{ enq_server.stdout_lines | select('search', 'enserver') | length > 0 }}"

#     # enq_server, Enqueue Server 2
#     - name:                            "SCSERS - Is ENSA2"
#       ansible.builtin.set_fact:
#         ensa2:                         "{{ enq_server.stdout_lines | select('search', 'enq_server') | length > 0 }}"

#     - name:                            "SCSERS - Print the value of ENSA1/ENSA2"
#       ansible.builtin.debug:
#         msg:
#           - "{{ ensa1 }}"
#           - "{{ ensa2 }}"
#   when:
#     - inventory_hostname == primary_instance_name

# [1] Create the SAP cluster resources - if using ENSA1 -

- name:                                "SCSERS - SUSE - ENSA1 - SAP Resources - Cluster Configuration after Install "
  block:
    - name:                            "SCSERS - SUSE - ENSA1 - Set the cluster on maintenance mode"
      ansible.builtin.command:         crm configure property maintenance-mode=true

    - name:                            "SCSERS - SUSE - ENSA1 - Configure SAP ASCS/SCS resources"
      ansible.builtin.command: >
                                       echo "y" | crm configure primitive rsc_sap_{{ sap_sid }}_ASCS{{ scs_instance_number }} SAPInstance \
                                       operations \$id=rsc_sap_{{ sap_sid }}_ASCS{{ scs_instance_number }}-operations \
                                       op monitor interval=11 timeout=60 on-fail=restart \
                                       params InstanceName={{ sap_sid }}_ASCS{{ scs_instance_number }}_{{ scs_virtual_hostname }} \
                                       START_PROFILE="/sapmnt/{{ sap_sid }}/profile/{{ sap_sid }}_ASCS{{ scs_instance_number }}_{{ scs_virtual_hostname }}" \
                                       AUTOMATIC_RECOVER=false \
                                       meta resource-stickiness=5000 failure-timeout=60 \
                                       migration-threshold=1 priority=10
      register:                        ascs_rsc_sap
      failed_when:                     ascs_rsc_sap.rc > 1

    - name:                            "SCSERS - SUSE - ENSA1 - Configure SAP ERS resources"
      ansible.builtin.command: >
                                       echo "y" | crm configure primitive rsc_sap_{{ sap_sid }}_ERS{{ ers_instance_number }} SAPInstance \
                                       operations \$id=rsc_sap_{{ sap_sid }}_ERS{{ ers_instance_number }}-operations \
                                       op monitor interval=11 timeout=60 on-fail=restart \
                                       params InstanceName={{ sap_sid }}_ERS{{ ers_instance_number }}_{{ ers_virtual_hostname }} \
                                       START_PROFILE="/sapmnt/{{ sap_sid }}/profile/{{ sap_sid }}_ERS{{ ers_instance_number }}_{{ ers_virtual_hostname }}" \
                                       AUTOMATIC_RECOVER=false IS_ERS=true \
                                       meta priority=1000
      register:                        ers_rsc_sap
      failed_when:                     ers_rsc_sap.rc > 1

    - name:                            "SCSERS - SUSE - ENSA1 - Modify SCS and ERS groups"
      ansible.builtin.shell: |
                                      echo "y" | crm configure modgroup g-{{ sap_sid }}_ASCS add rsc_sap_{{ sap_sid }}_ASCS{{ scs_instance_number }}
                                      echo "y" | crm configure modgroup g-{{ sap_sid }}_ERS add rsc_sap_{{ sap_sid }}_ERS{{ ers_instance_number }}
      register:                       scs_ers_group
      failed_when:                    scs_ers_group.rc > 1

    - name:                           "SCSERS - SUSE - ENSA1 - Configure Co-location Constraints"
      ansible.builtin.shell: |
                                      echo "y" | crm configure colocation col_sap_{{ sap_sid }}_no_both -5000: g-{{ sap_sid }}_ERS g-{{ sap_sid }}_ASCS
                                      echo "y" | crm configure location loc_sap_{{ sap_sid }}_failover_to_ers rsc_sap_{{ sap_sid }}_ASCS{{ scs_instance_number }} rule 2000: runs_ers_{{ sap_sid }} eq 1
                                      echo "y" | crm configure order ord_sap_{{ sap_sid }}_first_start_ascs Optional: rsc_sap_{{ sap_sid }}_ASCS{{ scs_instance_number }}:start rsc_sap_{{ sap_sid }}_ERS{{ ers_instance_number }}:stop symmetrical=false
      register:                       co_location
      failed_when:                    co_location.rc > 1

    # - name:                           " Bring primary node online "
    #   ansible.builtin.command:        crm node online {{ primary_instance_name }}

    - name:                           "SCSERS - SUSE - ENSA1 - Set the Cluster out of maintenance mode"
      ansible.builtin.command:        crm configure property maintenance-mode=false

  when:
    - inventory_hostname == primary_instance_name
    - ensa1 | default(false)

# [1] Create the SAP cluster resources - if using ENSA2 -
#   sudo crm configure colocation col_sap_{{ sap_sid }}_no_both -5000: g-{{ sap_sid }}_ERS g-{{ sap_sid }}_ASCS
#   sudo crm configure order ord_sap_{{ sap_sid }}_first_start_ascs Optional: rsc_sap_{{ sap_sid }}_ASCS00:start rsc_sap_{{ sap_sid }}_ERS01:stop symmetrical=false

- name:                               "SCSERS - SUSE - ENSA2 - SAP Resources - Cluster Configuration after Install"
  block:
    - name:                            "SCSERS - SUSE - ENSA2 - Set the cluster on maintenance mode"
      ansible.builtin.command:         crm configure property maintenance-mode=true

    - name:                            "SCSERS - SUSE - ENSA2 - Configure SAP ASCS/SCS resources"
      ansible.builtin.shell: >
                                       echo "y" | crm configure primitive rsc_sap_{{ sap_sid }}_ASCS{{ scs_instance_number }} SAPInstance \
                                       operations \$id=rsc_sap_{{ sap_sid }}_ASCS{{ scs_instance_number }}-operations \
                                       op monitor interval=11 timeout=60 on-fail=restart \
                                       params InstanceName={{ sap_sid }}_ASCS{{ scs_instance_number }}_{{ scs_virtual_hostname }} \
                                       START_PROFILE="/sapmnt/{{ sap_sid | upper }}/profile/{{ sap_sid | upper }}_ASCS{{ scs_instance_number }}_{{ scs_virtual_hostname }}" \
                                       AUTOMATIC_RECOVER=false \
                                       meta resource-stickiness=5000 target-role=Started
      register:                        ascs_rsc_sap
      failed_when:                     ascs_rsc_sap.rc > 1

    - name:                            "SCSERS - SUSE - ENSA2 - Configure SAP ERS resources"
      ansible.builtin.shell: >
                                       echo "y" | crm configure primitive rsc_sap_{{ sap_sid }}_ERS{{ ers_instance_number }} SAPInstance \
                                       operations \$id=rsc_sap_{{ sap_sid }}_ERS{{ ers_instance_number }}-operations \
                                       op monitor interval=11 timeout=60 on-fail=restart \
                                       params InstanceName={{ sap_sid }}_ERS{{ ers_instance_number }}_{{ ers_virtual_hostname }} \
                                       START_PROFILE="/sapmnt/{{ sap_sid }}/profile/{{ sap_sid }}_ERS{{ ers_instance_number }}_{{ ers_virtual_hostname }}" \
                                       AUTOMATIC_RECOVER=false IS_ERS=true meta target-role=Started
      register:                        ers_rsc_sap
      failed_when:                     ers_rsc_sap.rc > 1

    - name:                            "SCSERS - SUSE - ENSA2 - Modify SCS and ERS groups"
      ansible.builtin.shell: |
                                       echo "y" | crm configure modgroup g-{{ sap_sid }}_ASCS add rsc_sap_{{ sap_sid }}_ASCS{{ scs_instance_number }}
                                       echo "y" | crm configure modgroup g-{{ sap_sid }}_ERS add rsc_sap_{{ sap_sid }}_ERS{{ ers_instance_number }}
      register:                        scs_ers_group
      failed_when:                     scs_ers_group.rc > 1
# +------------------------------------4---------------------------------------*|

    - name:                            "SCSERS - SUSE - ENSA2 - Configure Co-location Constraints"
      ansible.builtin.shell: |
                                       echo "y" | crm configure colocation col_sap_{{ sap_sid }}_no_both -5000: g-{{ sap_sid }}_ERS g-{{ sap_sid }}_ASCS
                                       echo "y" | crm configure location loc_sap_{{ sap_sid }}_failover_to_ers rsc_sap_{{ sap_sid }}_ASCS{{ scs_instance_number }} rule 2000: runs_ers_{{ sap_sid }} eq 1
                                       echo "y" | crm configure order ord_sap_{{ sap_sid }}_first_start_ascs Optional: rsc_sap_{{ sap_sid }}_ASCS{{ scs_instance_number }}:start rsc_sap_{{ sap_sid }}_ERS{{ ers_instance_number }}:stop symmetrical=false
      register:                        co_location
      failed_when:                     co_location.rc > 1

    - name:                            "SCSERS - SUSE - ENSA2 - Bring primary node online "
      ansible.builtin.command:         crm node online {{ primary_instance_name }}

    - name:                            "SCSERS - SUSE - ENSA2 - Set the Cluster out of maintenance mode"
      ansible.builtin.command:         crm configure property maintenance-mode=false

  when:
    - inventory_hostname == primary_instance_name
    # - ensa2 | default(false)

# End of SAP Resources Cluster configuration
...
